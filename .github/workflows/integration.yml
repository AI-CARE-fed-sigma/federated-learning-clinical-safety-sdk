name: SDK ↔ Server Integration

on: [workflow_dispatch]

jobs:
  integration:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout SDK
        uses: actions/checkout@v4

      - name: Checkout Server
        uses: actions/checkout@v4
        with:
          repository: AlexDobsonPleming/federated-learning-clinical-safety-server
          path: server

      - name: Install Docker Compose
        run: sudo apt-get update && sudo apt-get install -y docker-compose

      - name: Build server image
        working-directory: server
        run: docker compose -f docker-compose.test.yml build --no-cache

      - name: Start server
        working-directory: server
        run: docker compose -f docker-compose.test.yml up -d

      - name: Wait for API
        working-directory: server
        run: |
          for i in $(seq 1 20); do
            if ss -ltn | grep -q ':8000'; then
              echo "✅ API is up"
              exit 0
            fi
            sleep 2
          done
          docker compose -f docker-compose.test.yml logs api
          exit 1

      - name: Extract SDK_TEST_TOKEN
        working-directory: server
        run: |
          docker cp api_test:/tmp/uploader_token.txt uploader_token.txt
          echo "SDK_TEST_TOKEN=$(cat uploader_token.txt)" >> $GITHUB_ENV

      - name: Setup Python & Poetry
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Poetry
        run: pip install poetry

      - name: Install SDK deps
        working-directory: .
        run: |
          poetry config virtualenvs.in-project true
          poetry install --no-interaction --no-ansi

      - name: Run integration tests
        working-directory: .
        env:
          API_BASE_URL: http://localhost:8000/api
          SDK_TEST_TOKEN: ${{ env.SDK_TEST_TOKEN }}
        run: poetry run pytest src/tests/test_integration.py

      - name: Tear down
        if: always()
        working-directory: server
        run: docker compose -f docker-compose.test.yml down --volumes --remove-orphans
