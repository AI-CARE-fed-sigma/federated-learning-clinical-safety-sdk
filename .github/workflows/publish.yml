name: ðŸ“¦ Publish to PyPI

# Only run when you push a tag like "v0.1.0"
on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  publish:
    name: Publish ${{ github.ref }} to PyPI
    runs-on: ubuntu-latest

    steps:
      # 1) Check out your code
      - uses: actions/checkout@v4

      # 2) Set up Python (use the same version you support)
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          check-latest: true

      # 3) Install Poetry
      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      # 4) Configure Poetry to use the in-project venv (optional)
      - name: Configure Poetry
        run: |
          poetry config virtualenvs.in-project true
          poetry config pypi-token.pypi "${{ secrets.PYPI_TOKEN }}"

      # 5) Build the distribution artifacts
      - name: Build package
        run: poetry build

      # 6) Publish to PyPI
      - name: Publish to PyPI
        run: poetry publish --no-interaction --username __token__ --password "${{ secrets.PYPI_TOKEN }}"

      # 7) Cleanup (optional)
      - name: Clean up
        run: rm -rf dist